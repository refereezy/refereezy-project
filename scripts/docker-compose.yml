version: '3.8'
    
services:
  # mkdocs - Dockerfile ubicado en: ../Documentation/Dockerfile
  mkdocs:
    image: mi-mkdocs
    container_name: docu
    restart: unless-stopped
    ports:
      - "8000:${MKDOCS_PORT}"
    volumes:
      - ../Documentation:/docs
    networks:
      - internal

  # socket.io api + real time web - Dockerfile ubicado en: ../APPS/web/Dockerfile
  sockets:
    image: socket-server:latest
    container_name: sockets
    restart: unless-stopped
    ports:
      - "3000:${SOCKET_IO_PORT}"
    environment:
      - PORT=${SOCKET_IO_PORT}
      - FIREBASE_KEY=${FIREBASE_KEY}
      - FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${FIREBASE_APP_ID}
      - FIREBASE_MEASUREMENT_ID=${FIREBASE_MEASUREMENT_ID}
      - REFEREEZY_API_URL=${REFEREEZY_API_URL}
    volumes:
      - ../APPS/web/src:/app/src
    networks:
      - internal

  # postgres testeo - Dockerfile ubicado en: ../API/test-db/Dockerfile
  test-db:
    image: test-db:latest
    container_name: testdb
    restart: unless-stopped
    ports:
      - "5433:${TEST_DB_PORT}"
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASS}
    networks:
      - internal

  # api testeo - Dockerfile ubicado en: ../API/Dockerfile
  test-api:
    image: api-app:test
    container_name: testapi
    restart: unless-stopped
    ports:
      - "8888:${API_PORT}"
    environment:
      - DB_USER=${TEST_DB_USER}
      - DB_PASSWORD=${TEST_DB_PASS}
      - DB_PORT=${TEST_DB_PORT}
      - DB_NAME=${TEST_DB_NAME}
      - DB_HOST=${TEST_DB_HOST}
    networks:
      - internal
      
  # api prod - Dockerfile ubicado en: ../API/Dockerfile
  api:
    image: api-app:latest
    container_name: api
    restart: unless-stopped
    ports:
      - "8080:${API_PORT}"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASS}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
    networks:
      - internal


networks:
  internal:
    name: internal
    external: true

    

